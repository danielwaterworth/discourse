#!/usr/bin/env ruby

path_file = File.open(ENV['TEST_LIST_FILE'])

require_relative '../spec/rails_helper'

class RSpecRunner
  def initialize(path_file)
    @path_file = path_file
  end

  def run
    while true
      file = readline
      run_file(file)
    end
  rescue EOFError
  end

  private

  def readline
    @path_file.readline.strip
  end

  def run_file(path)
    reset_rspec!

    options = RSpec::Core::ConfigurationOptions.new(ARGV + [path])

    RSpec::Core::Runner
      .new(options)
      .run(STDOUT, STDERR)
  end

  def reset_rspec!
    ::RSpec.clear_examples

    # see https://github.com/rspec/rspec-core/pull/2723
    if Gem::Version.new(::RSpec::Core::Version::STRING) <= Gem::Version.new("3.9.1")
      ::RSpec.world.instance_variable_set(
        :@example_group_counts_by_spec_file, Hash.new(0)
      )
    end

    # RSpec.clear_examples does not reset those, which causes issues when
    # a non-example error occurs (subsequent jobs are not executed)
    # TODO: upstream
    ::RSpec.world.non_example_failure = false

    # we don't want an error that occured outside of the examples (which
    # would set this to `true`) to stop the worker
    ::RSpec.world.wants_to_quit = false
  end
end

RSpecRunner.new(path_file).run
